{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\Desktop\\\\practice\\\\sample\\\\src\\\\component\\\\Views.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux'; // connect: 하위 컴포넌트에서 redux store를 접근하는 것을 가능하게 해주는 역할\n\nimport { addView } from '../redux/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Views = ({\n  count,\n  addView\n}) => {\n  _s();\n\n  const [number, setNumber] = useState(1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"items\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\uC870\\uD68C \\uC218: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: number,\n      onChange: e => setNumber(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addView(number),\n      children: \"\\uC870\\uD68C\\uD558\\uAE30!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}; // 컴포넌트에 props로 넣어줄 리덕스 스토어 상태에 관련된 함수\n\n\n_s(Views, \"gJdMPyQQfobVakqUfhz51LB7Ehk=\");\n\n_c = Views;\n\nconst mapStateToProps = ({\n  views\n}) => {\n  return {\n    count: views.count\n  };\n}; // 컴포넌트에 props로 넣어줄 액션을 디스패치하는 함수들에 관련된 함수\n\n\nconst mapDispatchToProps = {\n  addView: number => addView(number)\n}; // const mapDispatchToProps = (dispatch) => {\n//     return {\n//         addSubscriber: () => dispatch(addSubscriber())\n//     }\n// }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Views);\n\nvar _c;\n\n$RefreshReg$(_c, \"Views\");","map":{"version":3,"sources":["C:/Users/1/Desktop/practice/sample/src/component/Views.js"],"names":["React","useState","connect","addView","Views","count","number","setNumber","e","target","value","mapStateToProps","views","mapDispatchToProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,SAASC,OAAT,QAAwB,gBAAxB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASF,EAAAA;AAAT,CAAD,KAAwB;AAAA;;AAElC,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,CAAD,CAApC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACI;AAAA,0CAAWI,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEC,MAA1B;AAAkC,MAAA,QAAQ,EAAGE,CAAD,IAAOD,SAAS,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV;AAA5D;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAE,MAAMP,OAAO,CAACG,MAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAXD,C,CAYA;;;GAZMF,K;;KAAAA,K;;AAaN,MAAMO,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACnC,SAAO;AACHP,IAAAA,KAAK,EAAEO,KAAK,CAACP;AADV,GAAP;AAGH,CAJD,C,CAMA;;;AACA,MAAMQ,kBAAkB,GAAG;AACvBV,EAAAA,OAAO,EAAGG,MAAD,IAAYH,OAAO,CAACG,MAAD;AADL,CAA3B,C,CAGA;AACA;AACA;AACA;AACA;;AAEA,eAAeJ,OAAO,CAACS,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CT,KAA7C,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n// connect: 하위 컴포넌트에서 redux store를 접근하는 것을 가능하게 해주는 역할\r\nimport { addView } from '../redux/index';\r\n\r\nconst Views = ({ count, addView }) => {\r\n\r\n    const [number, setNumber] = useState(1);\r\n\r\n    return (\r\n        <div className=\"items\">\r\n            <h2>조회 수: {count}</h2>\r\n            <input type=\"text\" value={number} onChange={(e) => setNumber(e.target.value)} />\r\n            <button onClick={() => addView(number)}>조회하기!</button>\r\n        </div>\r\n    )\r\n}\r\n// 컴포넌트에 props로 넣어줄 리덕스 스토어 상태에 관련된 함수\r\nconst mapStateToProps = ({ views }) => {\r\n    return {\r\n        count: views.count\r\n    }\r\n}\r\n\r\n// 컴포넌트에 props로 넣어줄 액션을 디스패치하는 함수들에 관련된 함수\r\nconst mapDispatchToProps = {\r\n    addView: (number) => addView(number)\r\n}\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         addSubscriber: () => dispatch(addSubscriber())\r\n//     }\r\n// }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Views);"]},"metadata":{},"sourceType":"module"}