{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\Desktop\\\\practice\\\\sample\\\\src\\\\component\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchComments } from '../redux/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = ({\n  fetchComments,\n  loading,\n  comments\n}) => {\n  _s();\n\n  useEffect(() => {\n    fetchComments();\n  }, []);\n  const commentsItems = loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"is loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 38\n  }, this) : comments.map(comments => {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: comments.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: comments.emil\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: comments.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, comments.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: commentsItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Comments, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Comments;\n\nconst mapStateToProps = ({\n  comments\n}) => {\n  return {\n    comments: comments.items\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchComments\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Comments);\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["C:/Users/1/Desktop/practice/sample/src/component/Comments.js"],"names":["React","useEffect","connect","fetchComments","Comments","loading","comments","commentsItems","map","name","emil","body","id","mapStateToProps","items","mapDispatchToProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,gBAA9B;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAED,EAAAA,aAAF;AAAiBE,EAAAA,OAAjB;AAA0BC,EAAAA;AAA1B,CAAD,KAA0C;AAAA;;AACvDL,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,aAAa;AAChB,GAFQ,EAEN,EAFM,CAAT;AAGA,QAAMI,aAAa,GAAGF,OAAO,gBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAJ,GACzBC,QAAQ,CAACE,GAAT,CAAaF,QAAQ,IAAI;AACrB;AAAA;AAAA,8BACI;AAAA,kBAAKA,QAAQ,CAACG;AAAd;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAIH,QAAQ,CAACI;AAAb;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAIJ,QAAQ,CAACK;AAAb;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA,OAAUL,QAAQ,CAACM,EAAnB;AAAA;AAAA;AAAA;AAAA;AAKH,GAND,CADJ;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,cACKL;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAnBD;;GAAMH,Q;;KAAAA,Q;;AAqBN,MAAMS,eAAe,GAAG,CAAC;AAAEP,EAAAA;AAAF,CAAD,KAAkB;AACtC,SAAO;AACHA,IAAAA,QAAQ,EAAEA,QAAQ,CAACQ;AADhB,GAAP;AAGH,CAJD;;AAKA,MAAMC,kBAAkB,GAAG;AACvBZ,EAAAA;AADuB,CAA3B;AAIA,eAAeD,OAAO,CAACW,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CX,QAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { fetchComments } from '../redux/index'\r\n\r\nconst Comments = ({ fetchComments, loading, comments }) => {\r\n    useEffect(() => {\r\n        fetchComments()\r\n    }, [])\r\n    const commentsItems = loading ? (<div>is loading...</div>) : (\r\n        comments.map(comments => {\r\n            <div key={comments.id}>\r\n                <h3>{comments.name}</h3>\r\n                <p>{comments.emil}</p>\r\n                <p>{comments.body}</p>\r\n            </div>\r\n        }\r\n        )\r\n    )\r\n    return (\r\n        <div className=\"comments\">\r\n            {commentsItems}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ comments }) => {\r\n    return {\r\n        comments: comments.items\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    fetchComments\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comments)\r\n"]},"metadata":{},"sourceType":"module"}